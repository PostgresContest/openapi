// Code generated by ogen, DO NOT EDIT.

package v1

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// AttemptAttemptIDGet implements GET /attempt/{attempt_id} operation.
	//
	// GET /attempt/{attempt_id}
	AttemptAttemptIDGet(ctx context.Context, params AttemptAttemptIDGetParams) (AttemptAttemptIDGetRes, error)
	// AuthLoginPost implements POST /auth/login operation.
	//
	// POST /auth/login
	AuthLoginPost(ctx context.Context, req *AuthLoginPostReq) (AuthLoginPostRes, error)
	// AuthVerifyGet implements GET /auth/verify operation.
	//
	// GET /auth/verify
	AuthVerifyGet(ctx context.Context) (AuthVerifyGetRes, error)
	// TaskPost implements POST /task operation.
	//
	// POST /task
	TaskPost(ctx context.Context, req *TaskPostReq) (TaskPostRes, error)
	// TaskTaskIDAttemptPost implements POST /task/{task_id}/attempt operation.
	//
	// POST /task/{task_id}/attempt
	TaskTaskIDAttemptPost(ctx context.Context, req *TaskTaskIDAttemptPostReq, params TaskTaskIDAttemptPostParams) (TaskTaskIDAttemptPostRes, error)
	// TaskTaskIDAttemptsGet implements GET /task/{task_id}/attempts operation.
	//
	// GET /task/{task_id}/attempts
	TaskTaskIDAttemptsGet(ctx context.Context, params TaskTaskIDAttemptsGetParams) ([]Attempt, error)
	// TasksGet implements GET /tasks operation.
	//
	// GET /tasks
	TasksGet(ctx context.Context) (TasksGetRes, error)
	// UserGet implements GET /user operation.
	//
	// GET /user
	UserGet(ctx context.Context) (UserGetRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
